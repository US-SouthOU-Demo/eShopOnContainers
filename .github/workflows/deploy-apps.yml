name: Deploy Apps

on:
  workflow_dispatch:
    inputs:
      cluster_name:
        description: 'Name of AKS Cluster'
        required: true
        default: 'eslzakscluster'
      resource_group:
        description: 'Resource Group of AKS Cluster'
        required: true
        default: 'ESLZ-SPOKE'
      image_tag:
        description: 'Container image tag'
        required: true
        default: 'linux-dev'
      delete_all:
        description: 'Delete Existing Charts first?'
        required: true
        type: boolean
        default: true
  repository_dispatch:
    types:
    - deploy
  workflow_run:
    workflows: ["eshop-infrastructure"]
    branches: [latest]
    types: [completed]

env:
  NAMESPACE: eshop
  CHART_ROOT: deploy/k8s/helm

jobs:
  deploy-to-k8s:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: [self-hosted, linux]

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - uses: azure/aks-set-context@v1
        name: Set AKS context
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ inputs.cluster_name }}
          resource-group: ${{ inputs.resource_group }}
  
      - name: Set branch name as env variable
        shell: bash
        run: |
          currentbranch=$(echo ${GITHUB_REF##*/})
          echo "running on $currentbranch"
          echo "BRANCH=$currentbranch" >> $GITHUB_ENV
        
        
      - name: Delete eshop-common
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-common
      - name: Delete basket-api
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-basket-api
      - name: Delete catalog-api
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-catalog-api
      - name: Delete identity-api
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-identity-api
      - name: Delete mobileshoppingagg
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-mobileshoppingagg
      - name: Delete ordering-api
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-ordering-api
      - name: Delete ordering-backgroundtasks
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-ordering-backgroundtasks
      - name: Delete ordering-signalrhub
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-ordering-signalrhub
      - name: Delete payment-api
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-payment-api
      - name: Delete webmvc
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-webmvc
      - name: Delete webshoppingagg
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-webshoppingagg
      - name: Delete webspa
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-webspa
      - name: Delete webstatus
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-webstatus
      - name: Delete webhooks-api
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-webhooks-api
      - name: Delete webhooks-web
        shell: bash
        if: ${{ inputs.delete_all }}
        continue-on-error: true
        run: |
          helm --namespace ${{ env.NAMESPACE }} uninstall eshop-webhooks-web
          
      - name: deploy eshop-common
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-eshop-common" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' eshop-common --set inf.mesh.enabled=false
          
      - name: deploy basket-api
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-basket-api" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' basket-api --set inf.mesh.enabled=false
          
      - name: deploy catalog-api
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-catalog-api" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' catalog-api --set inf.mesh.enabled=false
          
      - name: deploy identity-api
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-identity-api" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' identity-api --set inf.mesh.enabled=false
          
      - name: deploy mobileshoppingagg
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-mobileshoppingagg" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' mobileshoppingagg --set inf.mesh.enabled=false
          
      - name: deploy ordering-api
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-ordering-api" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' ordering-api --set inf.mesh.enabled=false
          
      - name: deploy ordering-backgroundtasks
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-ordering-backgroundtasks" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' ordering-backgroundtasks --set inf.mesh.enabled=false
          
      - name: deploy ordering-signalrhub
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-ordering-signalrhub" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' ordering-signalrhub --set inf.mesh.enabled=false
          
      - name: deploy payment-api
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-payment-api" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' payment-api --set inf.mesh.enabled=false
          
      - name: deploy webmvc
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-webmvc" --namespace ${{ env.NAMESPACE }} --set "ingress.hosts=eshop-webmvc.${{ secrets.CUSTOM_DOMAIN_NAME }}" --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' webmvc --set inf.mesh.enabled=false
          
      - name: deploy webshoppingagg
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-webshoppingagg" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' webshoppingagg --set inf.mesh.enabled=false
          
      - name: deploy webspa
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-webspa" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' webspa --set inf.mesh.enabled=false
          
      - name: deploy webstatus
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-webstatus" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' webstatus --set inf.mesh.enabled=false
          
      - name: deploy webhooks
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-webhooks" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' webhooks --set inf.mesh.enabled=false
          
      - name: deploy webhooks-web
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm upgrade -i "eshop-webhooks-web" --namespace ${{ env.NAMESPACE }} --set inf.registry.server=${{ secrets.REGISTRY_HOST }} --set inf.registry.login=${{ secrets.USERNAME }} --set inf.registry.pwd=${{ secrets.PASSWORD }} --set inf.registry.secretName=eshop-docker-scret --values app.yaml --values inf.yaml --values "ingress_values.yaml" --values "ingress_values_linkerd.yaml"  --set app.name=eshop --set inf.k8s.dns="${{ secrets.CUSTOM_DOMAIN_NAME }}" --set image.tag=${{ inputs.image_tag }} --set image.pullPolicy='Always' webhooks-web --set inf.mesh.enabled=false

