name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      cluster_name:
        description: 'Name of AKS Cluster'
        required: true
        default: 'eslzakscluster'
      resource_group:
        description: 'Resource Group of AKS Cluster'
        required: true
        default: 'ESLZ-SPOKE'
  repository_dispatch:
    types:
    - deploy
  workflow_run:
    workflows: ["eshop-infrastructure"]
    branches: [latest]
    types: [completed]

env:
  NAMESPACE: eshop
  CHART_ROOT: deploy/k8s/helm

jobs:
  deploy-to-k8s:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: [self-hosted, linux]

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - uses: azure/aks-set-context@v1
        name: Set AKS context
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ inputs.cluster_name }}
          resource-group: ${{ inputs.resource_group }}
  
      - name: Set branch name as env variable
        shell: bash
        run: |
          currentbranch=$(echo ${GITHUB_REF##*/})
          echo "running on $currentbranch"
          echo "BRANCH=$currentbranch" >> $GITHUB_ENV

      - name: deploy sql-data
        shell: bash
        working-directory: ./deploy/k8s/helm/
        run: |
          helm install "eshop-sql-data" \
          --namespace ${{ env.NAMESPACE }} \
          --set "${{ secrets.API_server_address }}" \
          --values app.yaml \
          --values inf.yaml \
          --values "ingress_values.yaml" \
          --values "ingress_values_linkerd.yaml" \
          --set app.name='eshop' \
          --set inf.k8s.dns="${{ secrets.API_server_address }}" \
          sql-data \
          --set inf.mesh.enabled=$use_mesh
        #env:
          #chart: sql-data
          #azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          #cluster_name: ${{ secrets.CLUSTER_NAME }}
          #resource_group: ${{ secrets.RESOURCE_GROUP }}
          #registry_host: ${{ secrets.REGISTRY_HOST }}
          #chart_root: ${{ env.CHART_ROOT }}
          #namespace: ${{ env.NAMESPACE }}
          #dns: ${{ secrets.API_server_address }}
